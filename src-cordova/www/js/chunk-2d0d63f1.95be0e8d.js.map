{"version":3,"sources":["webpack:///./src/views/Dashboard.vue?95db","webpack:///src/views/Dashboard.vue","webpack:///./src/views/Dashboard.vue?21b9","webpack:///../../../../src/components/VSparkline/helpers/core.ts","webpack:///../../../../src/components/VSparkline/helpers/math.ts","webpack:///../../../../src/components/VSparkline/helpers/path.ts","webpack:///../../../src/components/VSparkline/VSparkline.ts","webpack:///./src/views/Dashboard.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","$store","getters","getIncomes","map","v","Number","amount","toLocaleString","gradient","radius","padding","width","lineCap","gradientDirection","fill","type","autoLineWidth","getExpenses","_s","totoalIncome","totoalExpense","getTotal","staticRenderFns","name","data","computed","total","reduce","maxY","totalValues","values","maxValue","Math","minValue","gridX","maxX","gridY","x","minX","index","y","value","horizonY","height","parseInt","p0","p2","p1","vector","to","from","length","unitVector","start","points","end","next","prev","isCollinear","checkCollinear","point","threshold","getDistance","isTooCloseForRadius","radiusForPoint","before","moveTo","after","mixins","inheritAttrs","props","autoDraw","autoDrawDuration","default","autoDrawEasing","color","validator","val","includes","String","labels","labelSize","lineWidth","showLabels","smooth","Boolean","lastLength","parsedPadding","parsedWidth","parsedHeight","parsedLabelSize","totalHeight","totalWidth","_lineWidth","totalPadding","parseFloat","boundary","minY","hasLabels","$scopedSlots","parsedLabels","len","i","item","normalizedValues","_values","genPoints","textY","_radius","watch","immediate","handler","path","methods","genGradient","stops","offset","id","x1","y1","x2","y2","genG","style","fontSize","textAnchor","dominantBaseline","genPath","d","stroke","_uid","ref","genLabels","children","genLabel","label","genBars","bars","offsetX","display","viewBox","genClipPath","rounding","rx","ry","attributeName","dur","genTrend","setTextColor","component","VCard","VCardTitle","VCol","VContainer","VList","VListItem","VListItemTitle","VRow","VSparkline"],"mappings":"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","file":"js/chunk-2d0d63f1.95be0e8d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-card',[_c('v-card-title',[_vm._v(\"Income\")]),_c('v-sparkline',{attrs:{\"value\":_vm.$store.getters.getIncomes.map(function (v) { return Number(v.amount); }),\"labels\":_vm.$store.getters.getIncomes.map(function (v) { return Number(v.amount).toLocaleString(); }\n            ),\"gradient\":_vm.gradient,\"smooth\":_vm.radius || false,\"padding\":_vm.padding,\"line-width\":_vm.width,\"stroke-linecap\":_vm.lineCap,\"gradient-direction\":_vm.gradientDirection,\"fill\":_vm.fill,\"type\":_vm.type,\"auto-line-width\":_vm.autoLineWidth,\"auto-draw\":\"\"}})],1)],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-card',[_c('v-card-title',[_vm._v(\"Expense\")]),_c('v-sparkline',{attrs:{\"value\":_vm.$store.getters.getExpenses.map(function (v) { return Number(v.amount); }),\"labels\":_vm.$store.getters.getExpenses.map(function (v) { return Number(v.amount).toLocaleString(); }\n            ),\"gradient\":_vm.gradient,\"smooth\":_vm.radius || false,\"padding\":_vm.padding,\"line-width\":_vm.width,\"stroke-linecap\":_vm.lineCap,\"gradient-direction\":_vm.gradientDirection,\"fill\":_vm.fill,\"type\":_vm.type,\"auto-line-width\":_vm.autoLineWidth,\"auto-draw\":\"\"}})],1)],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-card',[_c('v-list',[_c('v-list-item',[_c('v-list-item-title',[_vm._v(\"Income\")]),_c('v-list-item-title',[_vm._v(_vm._s(_vm.totoalIncome.toLocaleString()))])],1),_c('v-list-item',[_c('v-list-item-title',[_vm._v(\"Expense\")]),_c('v-list-item-title',[_vm._v(_vm._s(_vm.totoalExpense.toLocaleString()))])],1),_c('v-list-item',[_c('v-list-item-title',[_vm._v(\"Total\")]),_c('v-list-item-title',[_vm._v(_vm._s(_vm.getTotal.toLocaleString()))])],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-card>\n          <v-card-title>Income</v-card-title>\n          <v-sparkline\n            :value=\"$store.getters.getIncomes.map(v => Number(v.amount))\"\n            :labels=\"\n              $store.getters.getIncomes.map(v =>\n                Number(v.amount).toLocaleString()\n              )\n            \"\n            :gradient=\"gradient\"\n            :smooth=\"radius || false\"\n            :padding=\"padding\"\n            :line-width=\"width\"\n            :stroke-linecap=\"lineCap\"\n            :gradient-direction=\"gradientDirection\"\n            :fill=\"fill\"\n            :type=\"type\"\n            :auto-line-width=\"autoLineWidth\"\n            auto-draw\n          ></v-sparkline>\n        </v-card>\n      </v-col>\n      <v-col cols=\"12\">\n        <v-card>\n          <v-card-title>Expense</v-card-title>\n          <v-sparkline\n            :value=\"$store.getters.getExpenses.map(v => Number(v.amount))\"\n            :labels=\"\n              $store.getters.getExpenses.map(v =>\n                Number(v.amount).toLocaleString()\n              )\n            \"\n            :gradient=\"gradient\"\n            :smooth=\"radius || false\"\n            :padding=\"padding\"\n            :line-width=\"width\"\n            :stroke-linecap=\"lineCap\"\n            :gradient-direction=\"gradientDirection\"\n            :fill=\"fill\"\n            :type=\"type\"\n            :auto-line-width=\"autoLineWidth\"\n            auto-draw\n          ></v-sparkline>\n        </v-card>\n      </v-col>\n      <v-col cols=\"12\">\n        <v-card>\n          <v-list>\n            <v-list-item>\n              <v-list-item-title>Income</v-list-item-title>\n              <v-list-item-title>{{\n                totoalIncome.toLocaleString()\n              }}</v-list-item-title>\n            </v-list-item>\n            <v-list-item>\n              <v-list-item-title>Expense</v-list-item-title>\n              <v-list-item-title>{{\n                totoalExpense.toLocaleString()\n              }}</v-list-item-title>\n            </v-list-item>\n            <v-list-item>\n              <v-list-item-title>Total</v-list-item-title>\n              <v-list-item-title>{{\n                getTotal.toLocaleString()\n              }}</v-list-item-title>\n            </v-list-item>\n          </v-list>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nconst gradients = [\n  [\"#222\"],\n  [\"#42b3f4\"],\n  [\"red\", \"orange\", \"yellow\"],\n  [\"purple\", \"violet\"],\n  [\"#00c6ff\", \"#F0F\", \"#FF0\"],\n  [\"#f72047\", \"#ffd200\", \"#1feaea\"]\n];\nexport default {\n  name: \"Dashboard\",\n  data: () => ({\n    width: 2,\n    radius: 10,\n    padding: 8,\n    lineCap: \"round\",\n    gradient: gradients[5],\n    value: [0, 2, 5, 9, 5, 10, 3, 5, 0, 0, 1, 8, 2, 9, 0],\n    gradientDirection: \"top\",\n    gradients,\n    fill: false,\n    type: \"trend\",\n    autoLineWidth: false\n  }),\n  computed: {\n    totoalIncome() {\n      let total = this.$store.getters.getIncomes.map(v => Number(v.amount));\n      return total.reduce((total, incomeTotal) => (total += incomeTotal), 0);\n    },\n    totoalExpense() {\n      let total = this.$store.getters.getExpenses.map(v => Number(v.amount));\n      return total.reduce((total, expenseTotal) => (total += expenseTotal), 0);\n    },\n    getTotal() {\n      return this.totoalIncome - this.totoalExpense;\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","import { Point, Boundary, Bar } from '../VSparkline'\n\nexport function genPoints (\n  values: number[],\n  boundary: Boundary\n): Point[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  const maxValue = Math.max(...values)\n  const minValue = Math.min(...values)\n\n  const gridX = (maxX - minX) / (totalValues - 1)\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n\n  return values.map((value, index) => {\n    return {\n      x: minX + index * gridX,\n      y:\n        maxY -\n        (value - minValue) * gridY +\n        +(index === totalValues - 1) * 0.00001 -\n        +(index === 0) * 0.00001,\n      value,\n    }\n  })\n}\n\nexport function genBars (\n  values: number[],\n  boundary: Boundary\n): Bar[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  let maxValue = Math.max(...values)\n  let minValue = Math.min(...values)\n\n  if (minValue > 0) minValue = 0\n  if (maxValue < 0) maxValue = 0\n\n  const gridX = maxX / totalValues\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n  const horizonY = maxY - Math.abs(minValue * gridY)\n\n  return values.map((value, index) => {\n    const height = Math.abs(gridY * value)\n\n    return {\n      x: minX + index * gridX,\n      y: horizonY - height +\n        +(value < 0) * height,\n      height,\n      value,\n    }\n  })\n}\n","import { Point } from '../VSparkline'\n\nfunction int (value: string | number): number {\n  return parseInt(value, 10)\n}\n\n/**\n * https://en.wikipedia.org/wiki/Collinearity\n * x=(x1+x2)/2\n * y=(y1+y2)/2\n */\nexport function checkCollinear (p0: Point, p1: Point, p2: Point): boolean {\n  return int(p0.x + p2.x) === int(2 * p1.x) && int(p0.y + p2.y) === int(2 * p1.y)\n}\n\nexport function getDistance (p1: Point, p2: Point): number {\n  return Math.sqrt(\n    Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2)\n  )\n}\n\nexport function moveTo (to: Point, from: Point, radius: number) {\n  const vector = { x: to.x - from.x, y: to.y - from.y }\n  const length = Math.sqrt((vector.x * vector.x) + (vector.y * vector.y))\n  const unitVector = { x: vector.x / length, y: vector.y / length }\n\n  return {\n    x: from.x + unitVector.x * radius,\n    y: from.y + unitVector.y * radius,\n  }\n}\n","import { Point } from '../VSparkline'\nimport { checkCollinear, getDistance, moveTo } from './math'\n\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\nexport function genPath (points: Point[], radius: number, fill = false, height = 75) {\n  const start = points.shift()!\n  const end = points[points.length - 1]\n\n  return (\n    (fill ? `M${start.x} ${height - start.x + 2} L${start.x} ${start.y}` : `M${start.x} ${start.y}`) +\n    points\n      .map((point, index) => {\n        const next = points[index + 1]\n        const prev = points[index - 1] || start\n        const isCollinear = next && checkCollinear(next, point, prev)\n\n        if (!next || isCollinear) {\n          return `L${point.x} ${point.y}`\n        }\n\n        const threshold = Math.min(\n          getDistance(prev, point),\n          getDistance(next, point)\n        )\n        const isTooCloseForRadius = threshold / 2 < radius\n        const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius\n\n        const before = moveTo(prev, point, radiusForPoint)\n        const after = moveTo(next, point, radiusForPoint)\n\n        return `L${before.x} ${before.y}S${point.x} ${point.y} ${after.x} ${after.y}`\n      })\n      .join('') +\n    (fill ? `L${end.x} ${height - start.x + 2} Z` : '')\n  )\n}\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { genPoints, genBars } from './helpers/core'\nimport { genPath } from './helpers/path'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { Prop, PropValidator } from 'vue/types/options'\n\nexport type SparklineItem = number | { value: number }\n\nexport type SparklineText = {\n  x: number\n  value: string\n}\n\nexport interface Boundary {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n}\n\nexport interface Point {\n  x: number\n  y: number\n  value: number\n}\n\nexport interface Bar {\n  x: number\n  y: number\n  height: number\n  value: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    path: SVGPathElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable\n).extend({\n  name: 'VSparkline',\n\n  inheritAttrs: false,\n\n  props: {\n    autoDraw: Boolean,\n    autoDrawDuration: {\n      type: Number,\n      default: 2000,\n    },\n    autoDrawEasing: {\n      type: String,\n      default: 'ease',\n    },\n    autoLineWidth: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    fill: {\n      type: Boolean,\n      default: false,\n    },\n    gradient: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    gradientDirection: {\n      type: String as Prop<'top' | 'bottom' | 'left' | 'right'>,\n      validator: (val: string) => ['top', 'bottom', 'left', 'right'].includes(val),\n      default: 'top',\n    },\n    height: {\n      type: [String, Number],\n      default: 75,\n    },\n    labels: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    labelSize: {\n      type: [Number, String],\n      default: 7,\n    },\n    lineWidth: {\n      type: [String, Number],\n      default: 4,\n    },\n    padding: {\n      type: [String, Number],\n      default: 8,\n    },\n    showLabels: Boolean,\n    smooth: {\n      type: [Boolean, Number, String],\n      default: false,\n    },\n    type: {\n      type: String as Prop<'trend' | 'bar'>,\n      default: 'trend',\n      validator: (val: string) => ['trend', 'bar'].includes(val),\n    },\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    lastLength: 0,\n  }),\n\n  computed: {\n    parsedPadding (): number {\n      return Number(this.padding)\n    },\n    parsedWidth (): number {\n      return Number(this.width)\n    },\n    parsedHeight (): number {\n      return parseInt(this.height, 10)\n    },\n    parsedLabelSize (): number {\n      return parseInt(this.labelSize, 10) || 7\n    },\n    totalHeight (): number {\n      let height = this.parsedHeight\n\n      if (this.hasLabels) height += parseInt(this.labelSize, 10) * 1.5\n\n      return height\n    },\n    totalWidth (): number {\n      let width = this.parsedWidth\n      if (this.type === 'bar') width = Math.max(this.value.length * this._lineWidth, width)\n\n      return width\n    },\n    totalValues (): number {\n      return this.value.length\n    },\n    _lineWidth (): number {\n      if (this.autoLineWidth && this.type !== 'trend') {\n        const totalPadding = this.parsedPadding * (this.totalValues + 1)\n        return (this.parsedWidth - totalPadding) / this.totalValues\n      } else {\n        return parseFloat(this.lineWidth) || 4\n      }\n    },\n    boundary (): Boundary {\n      if (this.type === 'bar') return { minX: 0, maxX: this.totalWidth, minY: 0, maxY: this.parsedHeight }\n\n      const padding = this.parsedPadding\n\n      return {\n        minX: padding,\n        maxX: this.totalWidth - padding,\n        minY: padding,\n        maxY: this.parsedHeight - padding,\n      }\n    },\n    hasLabels (): boolean {\n      return Boolean(\n        this.showLabels ||\n        this.labels.length > 0 ||\n        this.$scopedSlots.label\n      )\n    },\n    parsedLabels (): SparklineText[] {\n      const labels = []\n      const points = this._values\n      const len = points.length\n\n      for (let i = 0; labels.length < len; i++) {\n        const item = points[i]\n        let value = this.labels[i]\n\n        if (!value) {\n          value = typeof item === 'object'\n            ? item.value\n            : item\n        }\n\n        labels.push({\n          x: item.x,\n          value: String(value),\n        })\n      }\n\n      return labels\n    },\n    normalizedValues (): number[] {\n      return this.value.map(item => (typeof item === 'number' ? item : item.value))\n    },\n    _values (): Point[] | Bar[] {\n      return this.type === 'trend' ? genPoints(this.normalizedValues, this.boundary) : genBars(this.normalizedValues, this.boundary)\n    },\n    textY (): number {\n      let y = this.parsedHeight\n      if (this.type === 'trend') y -= 4\n      return y\n    },\n    _radius (): number {\n      return this.smooth === true ? 8 : Number(this.smooth)\n    },\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler () {\n        this.$nextTick(() => {\n          if (\n            !this.autoDraw ||\n            this.type === 'bar' ||\n            !this.$refs.path\n          ) return\n\n          const path = this.$refs.path\n          const length = path.getTotalLength()\n\n          if (!this.fill) {\n            path.style.transition = 'none'\n            path.style.strokeDasharray = length + ' ' + length\n            path.style.strokeDashoffset = Math.abs(length - (this.lastLength || 0)).toString()\n            path.getBoundingClientRect()\n            path.style.transition = `stroke-dashoffset ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.strokeDashoffset = '0'\n          } else {\n            path.style.transformOrigin = 'bottom center'\n            path.style.transition = 'none'\n            path.style.transform = `scaleY(0)`\n            path.getBoundingClientRect()\n            path.style.transition = `transform ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.transform = `scaleY(1)`\n          }\n          this.lastLength = length\n        })\n      },\n    },\n  },\n\n  methods: {\n    genGradient () {\n      const gradientDirection = this.gradientDirection\n      const gradient = this.gradient.slice()\n\n      // Pushes empty string to force\n      // a fallback to currentColor\n      if (!gradient.length) gradient.push('')\n\n      const len = Math.max(gradient.length - 1, 1)\n      const stops = gradient.reverse().map((color, index) =>\n        this.$createElement('stop', {\n          attrs: {\n            offset: index / len,\n            'stop-color': color || 'currentColor',\n          },\n        })\n      )\n\n      return this.$createElement('defs', [\n        this.$createElement('linearGradient', {\n          attrs: {\n            id: this._uid,\n            x1: +(gradientDirection === 'left'),\n            y1: +(gradientDirection === 'top'),\n            x2: +(gradientDirection === 'right'),\n            y2: +(gradientDirection === 'bottom'),\n          },\n        }, stops),\n      ])\n    },\n    genG (children: VNode[]) {\n      return this.$createElement('g', {\n        style: {\n          fontSize: '8',\n          textAnchor: 'middle',\n          dominantBaseline: 'mathematical',\n          fill: 'currentColor',\n        } as object, // TODO: TS 3.5 is too eager with the array type here\n      }, children)\n    },\n    genPath () {\n      const points = genPoints(this.normalizedValues, this.boundary)\n\n      return this.$createElement('path', {\n        attrs: {\n          d: genPath(points, this._radius, this.fill, this.parsedHeight),\n          fill: this.fill ? `url(#${this._uid})` : 'none',\n          stroke: this.fill ? 'none' : `url(#${this._uid})`,\n        },\n        ref: 'path',\n      })\n    },\n    genLabels (offsetX: number) {\n      const children = this.parsedLabels.map((item, i) => (\n        this.$createElement('text', {\n          attrs: {\n            x: item.x + offsetX + this._lineWidth / 2,\n            y: this.textY + (this.parsedLabelSize * 0.75),\n            'font-size': Number(this.labelSize) || 7,\n          },\n        }, [this.genLabel(item, i)])\n      ))\n\n      return this.genG(children)\n    },\n    genLabel (item: SparklineText, index: number) {\n      return this.$scopedSlots.label\n        ? this.$scopedSlots.label({ index, value: item.value })\n        : item.value\n    },\n    genBars () {\n      if (!this.value || this.totalValues < 2) return undefined as never\n\n      const bars = genBars(this.normalizedValues, this.boundary)\n      const offsetX = (Math.abs(bars[0].x - bars[1].x) - this._lineWidth) / 2\n\n      return this.$createElement('svg', {\n        attrs: {\n          display: 'block',\n          viewBox: `0 0 ${this.totalWidth} ${this.totalHeight}`,\n        },\n      }, [\n        this.genGradient(),\n        this.genClipPath(bars, offsetX, this._lineWidth, 'sparkline-bar-' + this._uid),\n        this.hasLabels ? this.genLabels(offsetX) : undefined as never,\n        this.$createElement('g', {\n          attrs: {\n            'clip-path': `url(#sparkline-bar-${this._uid}-clip)`,\n            fill: `url(#${this._uid})`,\n          },\n        }, [\n          this.$createElement('rect', {\n            attrs: {\n              x: 0,\n              y: 0,\n              width: this.totalWidth,\n              height: this.height,\n            },\n          }),\n        ]),\n      ])\n    },\n    genClipPath (bars: Bar[], offsetX: number, lineWidth: number, id: string) {\n      const rounding = typeof this.smooth === 'number'\n        ? this.smooth\n        : this.smooth ? 2 : 0\n\n      return this.$createElement('clipPath', {\n        attrs: {\n          id: `${id}-clip`,\n        },\n      }, bars.map(item => {\n        return this.$createElement('rect', {\n          attrs: {\n            x: item.x + offsetX,\n            y: item.y,\n            width: lineWidth,\n            height: item.height,\n            rx: rounding,\n            ry: rounding,\n          },\n        }, [\n          this.autoDraw ? this.$createElement('animate', {\n            attrs: {\n              attributeName: 'height',\n              from: 0,\n              to: item.height,\n              dur: `${this.autoDrawDuration}ms`,\n              fill: 'freeze',\n            },\n          }) : undefined as never,\n        ])\n      }))\n    },\n    genTrend () {\n      return this.$createElement('svg', this.setTextColor(this.color, {\n        attrs: {\n          ...this.$attrs,\n          display: 'block',\n          'stroke-width': this._lineWidth || 1,\n          viewBox: `0 0 ${this.width} ${this.totalHeight}`,\n        },\n      }), [\n        this.genGradient(),\n        this.hasLabels && this.genLabels(-(this._lineWidth / 2)),\n        this.genPath(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    if (this.totalValues < 2) return undefined as never\n\n    return this.type === 'trend' ? this.genTrend() : this.genBars()\n  },\n})\n","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=3a7fd237&scoped=true&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3a7fd237\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemTitle } from 'vuetify/lib/components/VList';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSparkline } from 'vuetify/lib/components/VSparkline';\ninstallComponents(component, {VCard,VCardTitle,VCol,VContainer,VList,VListItem,VListItemTitle,VRow,VSparkline})\n"],"sourceRoot":""}